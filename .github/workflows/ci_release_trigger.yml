# This is a basic workflow to help you get started with Actions

name: Release Trigger

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, deveop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  release-trigger:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        env:
          cache-name: yarn-cache-v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-

      - name: Yarn Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --prefer-offline

      - id: changed-packages
        name: List Changed Apps
        run: |
          packages=();

          echo "::set-output name=packages::${packages}";

      - name: Trigger Development Builds for changed apps
        run: |
          echo "would have triggered";
          echo "${{ steps.changed-packages.outputs.packaged }}";

          # for package in ${{ steps.changed-packages.outputs.packaged }};
          # do
          #   dpx android_release \
          #     branch=${{ github.ref }} \
          #     commit=${{ github.sha }} \
          #     workspace=$package;

          #   dpx ios_release \
          #     branch=${{ github.ref }} \
          #     commit=${{ github.sha }} \
          #     workspace=$package;
          # done
